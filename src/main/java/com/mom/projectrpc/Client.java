package com.mom.projectrpc;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import org.apache.thrift.TException;
import org.apache.thrift.protocol.TBinaryProtocol;
import org.apache.thrift.protocol.TCompactProtocol;
import org.apache.thrift.protocol.TProtocol;
import org.apache.thrift.transport.TSocket;
import org.apache.thrift.transport.TTransport;
import org.apache.thrift.transport.TTransportException;
 

/**
 * @author Sisi Wang & Bo Ding
 *
 * Nov 5, 2015
 */
public class Client{
	public String server_ip = null;//server IP address
	public static final int SERVER_PORT = 8090;//server port number
	public static final int TIMEOUT = 30000;//threshold = 30s
	
	/*
	 *Client constructor
	 */
	public Client(String address){

    	this.server_ip = address;
    }
	
	/*
	 * Get server_ip
	 */
    public String getServerIp(){
    	return this.server_ip;
    }
    

    public static void main(String[] args) throws IOException {
    	
    	Client client = new Client(args[0]);//new client instance with running Argument: the IP address
    	BufferedReader mBrsend = new BufferedReader(new InputStreamReader(System.in));
    	String str = null;//user command
    	while((str = mBrsend.readLine()) != null){
			System.out.println("Please input your command:"
					+ "\n 1. put key value"
					+ "\n 2. get key"
					+ "\n 3. delete key"
					+ "\n 4. close");
			
			if(str.equals("close")){
				System.out.println("Client close.");
				System.exit(0);
			}else{
				client.startClient(str);
			}
			
		}
	}
 
    /**
     * @param order
     * @throws IOException
     */
    public void startClient(String order) throws IOException {
        TTransport transport = null;//Thrift transport
        try {
            transport = new TSocket(this.getServerIp(), SERVER_PORT, TIMEOUT);
            // protocol should be equal to the server
            TProtocol protocol = new TBinaryProtocol(transport);
            KeyValueOperateService.Client client = new KeyValueOperateService.Client(
                    protocol);//automatically generated by Thrift
            transport.open();
            String result = client.executeAndReply(order);//call remote function
    		
            System.out.println("Thrift client result =: " + result);
        } catch (TTransportException e) {
            e.printStackTrace();
        } catch (TException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
            if (null != transport) {
                transport.close();
            }
        }
    }
}

