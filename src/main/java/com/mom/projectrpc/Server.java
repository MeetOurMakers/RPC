package com.mom.projectrpc;

import java.net.InetAddress;
import java.util.HashMap;

import org.apache.thrift.TProcessor;
import org.apache.thrift.protocol.TBinaryProtocol;
import org.apache.thrift.server.TServer;
import org.apache.thrift.server.TThreadPoolServer;
import org.apache.thrift.transport.TServerSocket;

/**
 * @author Sisi Wang & Bo Ding
 *
 *         Nov 5, 2015
 */
public class Server {
	public static final int SERVER_PORT = 8090;
	public static HashMap<String,String> map= null;

	public static void main(String[] args) {
		Server server = new Server();
		server.startServer();
	}

	public void startServer() {
		try {
			System.out.println("RPC TThreadPoolServer start ....");
			// the service is auto-generated by thrift
			TProcessor tprocessor = new KeyValueOperateService.Processor<KeyValueOperateService.Iface>(
					new KeyValueOperateImpl(InetAddress.getLocalHost().toString()));
			// Blocking I/O for transport
			TServerSocket serverTransport = new TServerSocket(SERVER_PORT);
			TThreadPoolServer.Args ttpsArgs = new TThreadPoolServer.Args(serverTransport);
			ttpsArgs.processor(tprocessor);
			// binary coding protocol
			ttpsArgs.protocolFactory(new TBinaryProtocol.Factory());
			// multiThread server with blocking I/O
			TServer server = new TThreadPoolServer(ttpsArgs);
			server.serve();

		} catch (Exception e) {
			System.out.println("Server start error!!!");
			e.printStackTrace();
		}
	}

}
